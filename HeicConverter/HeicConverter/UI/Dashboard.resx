<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABGdBTUEAALGPC/xhBQAABn9JREFUeF7t
        3e2N20YQgGGXklJcSv7HAdJBSgjgK8ClqAjbyE+XkuzwloEi83T64H7yeYEXF1x8EkXNaGaWK+kDAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAt+f37519/+/b5y6dvn0/p54/0858w/3f87sun7y9//vH3X7/kPwHm
        JoL+PBnu8CRZMC0R3BtB/5BReSQKpuDT15ePD1aMq8ZtRqLkuwHGY8+q8abpPvLdAeOQgvf0UzCX0myC
        kUhBWy85VlUSjECVtuotJQl6JgbyzcCtqMEd3bIVsLWN1S3zCLqjaWt1qVYLPRGv2JuB2lBVBN3QVfVY
        VUXQCyWulO/gKR8e0I4e26tVbRaa02V7lbXki+ak9irez7EZoK2NY8uHCbQhBWL9bSW3aw5BWzod0Bfj
        2PJhAm3YCsyezIcJtEEFAa4gQYArpEA0pANvkV6lLfMCb9HzhUL7sdCcHt4k9Za2mqALehzUDejoBtvd
        gStEK9NbFcmHBvRBV1VE9UCP9FBFzB7oli6qyNeXj/lwgP5omiRaK4xAanNaXF23rQTjUDlJJAfGo0q7
        pa3CyOTvISyzumUgxyxEy7VboqgamJHlM7RScD+SKPE3kWQ2IOIQLLuAX2eUeMPV8jXQa+Lkn8vXQPvC
        TgAAAAAAAAAAAADYkbgIG8ZFWxdjcXiWZHjdubC5nSe57F6QLDgMUR0i6DeS4T1PEgXTsux1u14tblWi
        YC4erBhXjfYs3zwwJnnG2AzwPTSfYEgiaFMAV/melpQkP7yTE8NQumq8qXd1ondSoLb9dq+UJFoudEde
        ui3zQRj3a5UL/ZDfprwVqC2VJGhPBOJFYHZjVDRJgibUXKV6RkmC6kTAdTRvvKskQTXydpHNQOxZSYLi
        NLu+sZOSBMUYPTlWJQl2p9Nl3IeVJNiNFEwtvniouJIETzNrcpzpYiIeI4LnIpjm1AZH3MsBKsf/lSTj
        UrsFOFxyrEqSMYjl1AjSGCLPnsDTspL0texH4cyylPuo8fjzqUBv5MS4ZfvGKf7t3oly9ORYNbR3xhPv
        o9gtUUbdPlLCeC4kSSfsdAHuqaVKybFhel4kSUPi5KcnYtdl1Ef6Z8lxRUN7G0oGZQz3t77y5STdvB2+
        +siLDp6gxiv2rT10+rfHuBD4pFqtStReJbr26pf+v+S4UUN7BWonx39u9NE7LQwcS/NIOZolx+rZikzz
        YxlZSbI/HQXkcs1k4/e8Q63WjgjI+TSP7ITrCxOr1XoOyXEA03Ocn27cQ5TfzRPKqdRqPUCcsDhxWyeU
        U3rKTz1uIU7YxQnk7JpHbiOdLMlxULVa72A59/Bqtd7CihUXtVo/Y8WK52q1LkgnxdzBc7VaK1FSN04Q
        j65Wy9zB6x661TJ38F2PXEXSCTB38F0PWUVc7+CtHm6vltaKd3ukVis9YK0V7/YQVcSSLh929iqiteKz
        Tl1F0gPUWvEppx3YtVbcy1gBzWE1B1or7ul0VSQ9KK0V93WWgd1eK5ZyiirigxdYzNGriMGcpR22ihjM
        WcVRq4jqwVoOV0VUD9Y0zblfcuiNQTpoy7qs6jBVxLIumzjKLGJZl63svooYzNnU3quI6sHWdltFVA92
        Ya9VZPNgyQZ2V0VUD/Zkd+8XMXuwM/v5XF/Vgz3aTZulerBHu9h+Elm6dXBkDzavIpGlWwdG9mDTYV31
        4AC2G9YN5xzBZm3W1sGQvdlkWPfVBRzFWGXNYVsPwzlHsmqbZTjncNbcwGg454DWW82Knm7jAMiurdJm
        aa84rDXaLO0VB7Z8mxV3cnGn5DAWbbO0Vxzery8fczjvj4uDHN2imxfNHxzdottO0h2YPzi8OZz3Z+vO
        yNEsMqgb0DmLReYQ8wenscQFQwnCWSwyqNvezlkskiDphq1gcRb333ISN3pxJ+So7p8gtrhzFiOWc1jv
        x9YdkaOaw3o/VBDOYpEKEpP/1p2RA7r/DGInL6exxJb32GqizeLwlriKvuJqOoe2ZHKsSBIO6KnoOwkv
        iSTRbrF3l4WlmolxSRyARGFPRkzGglLRD2e4h+V9Iq9t10mysLIRc30lxHtEScstWFw3kTR82IidiKMl
        llJMLZcaUnwNkwz3sFSa9ODiQS4PNKpOTqTlBMQgdWY+OTcZJ5P7unWer5n+5n/PX5h+vzy3567P+xoH
        a9CvgT9l8AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJuTDh38B70KoIkMH5KAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>